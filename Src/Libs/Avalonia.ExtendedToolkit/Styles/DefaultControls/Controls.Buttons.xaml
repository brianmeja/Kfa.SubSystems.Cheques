<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:Avalonia.ExtendedToolkit.Controls;assembly=Avalonia.ExtendedToolkit"
    xmlns:converters="clr-namespace:Avalonia.ExtendedToolkit.Converters;assembly=Avalonia.ExtendedToolkit"
    xmlns:System="clr-namespace:System;assembly=mscorlib">
   <Styles.Resources>
    <converters:ThicknessToDoubleConverter x:Key="BorderThicknessToStrokeThicknessConverter" TakeThicknessSide="Left" />
  </Styles.Resources>

  <!--use metrobutton style as default button style-->
  <!--<Style Selector="Button">
    <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
  </Style>-->

  <!--  base button style for min, max and close window buttons  -->
  <Style  Selector="Controls|MetroButton.BaseMetroWindowButtonStyle">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.TransparentWhite}" />
    <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundColor}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid Background="{TemplateBinding Background}">
            <ContentControl x:Name="PART_ContentPresenter"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Content="{TemplateBinding Content}"
                                       Background="{TemplateBinding Background}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       Opacity="0.6" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>

  <Style Selector="Controls|MetroButton.BaseMetroWindowButtonStyle:pointerover /template/ ContentControl#PART_ContentPresenter">
    <Setter Property="Opacity" Value="1" />
  </Style>

  <Style Selector="Controls|MetroButton.BaseMetroWindowButtonStyle:pointerover">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SemiTransparentWhite}" />
  </Style>

  <Style Selector="Controls|MetroButton.BaseMetroWindowButtonStyle:pressed">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="Foreground" Value="White" />
  </Style>

  <Style Selector="Controls|MetroButton.BaseMetroWindowButtonStyle:disabled">
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForegroundDisabled}" />
  </Style>

  <Style Selector="Controls|MetroButton.LightMetroWindowButtonStyle">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="MaxHeight" Value="34" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Width" Value="34" />
  </Style>

  <Style Selector="Controls|MetroButton.LightMetroWindowButtonStyle:pointerover">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SemiTransparentWhite}" />
  </Style>

  <Style Selector="Controls|MetroButton.LightMetroWindowButtonStyle:pressed">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="Foreground" Value="White" />
  </Style>

  <Style Selector="Controls|MetroButton.LightMetroWindowButtonStyle:disabled">
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForegroundDisabled}" />
  </Style>

  <Style Selector="Controls|MetroButton.DarkMetroWindowButtonStyle">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="MaxHeight" Value="34" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Width" Value="34" />
  </Style>

  <Style Selector="Controls|MetroButton.DarkMetroWindowButtonStyle:pointerover">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SemiTransparentGrey}" />
  </Style>

  <Style Selector="Controls|MetroButton.DarkMetroWindowButtonStyle:pressed">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="Foreground" Value="White" />
  </Style>

  <Style Selector="Controls|MetroButton.DarkMetroWindowButtonStyle:disabled">
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DarkIdealForegroundDisabled}" />
  </Style>

  <!--MahApps.Metro.Styles.WindowButton.Close.Light.Win10-->
  <!--MahApps.Metro.Styles.WindowButton.Close.Dark.Win10-->

  <!--  style for default button  -->
  <Style Selector="Controls|MetroButton">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ContentCharacterCasing" Value="Upper" />
    <Setter Property="CornerRadius" Value="3" />
    <Setter Property="FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.MouseOverBorder}" />
    <Setter Property="FocusBorderThickness" Value="2" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Default}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Sizes.Font.UpperCaseContent}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Padding" Value="5 6" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Mode=OneWay}" />

            <Border x:Name="DisabledVisualElement"
                    Background="{DynamicResource MahApps.Brushes.Controls.Disabled}"
                    IsHitTestVisible="False"
                    Opacity="0"
                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Mode=OneWay}" />

            <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                       Margin="{TemplateBinding BorderThickness}"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Content="{TemplateBinding Content}"
                                       ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentCharacterCasing}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       RecognizesAccessKey="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="Controls|MetroButton[IsPointerOver=true] /template/ Border#Border">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
  </Style>

  <Style Selector="Controls|MetroButton[IsPressed=true] /template/ Border#Border">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
  </Style>

  <!--IsKeyboardFocusWithin-->
  <!--<Style Selector="Button.MetroButton:keypressed? /template/ Border#Border">
    <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush), Mode=OneWay}" />
    <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderThickness), Mode=OneWay}" />
  </Style>-->

  <Style Selector="Controls|MetroButton[IsEnabled=false] /template/ Border#DisabledVisualElement">
    <Setter Property="Opacity" Value="0.7" />
  </Style>

  <Style Selector="Controls|MetroButton[IsEnabled=false] /template/ Controls|ContentControlEx#PART_ContentPresenter">
    <Setter Property="Opacity" Value="0.3" />
  </Style>

  <Style Selector="Controls|MetroToggleButton">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="CornerRadius" Value="3" />
    <Setter Property="FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.MouseOverBorder}" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Default}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Sizes.Font.UpperCaseContent}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Padding" Value="5 6" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Mode=OneWay}" />
            <Border x:Name="DisabledVisualElement"
                    Background="{DynamicResource ControlsDisabledBrush}"
                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Mode=OneWay}"
                    IsHitTestVisible="False"
                    Opacity="0" />
            <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                       Margin="{TemplateBinding BorderThickness}"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Content="{TemplateBinding Content}"
                                       ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentCharacterCasing}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       RecognizesAccessKey="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsChecked=true] /template/ Border#Border">
    <Setter Property="BorderThickness" Value="2" />
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsEnabled=false] /template/ Border#DisabledVisualElement">
    <Setter Property="Opacity" Value="0.7" />
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsEnabled=false] /template/ Controls|ContentControlEx#PART_ContentPresenter">
    <Setter Property="Opacity" Value="0.3" />
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsChecked=true]">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray2}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray5}" />
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsPointerOver=true][IsChecked=false]">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsPointerOver=true][IsChecked=true]">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray3}" />
  </Style>

  <Style Selector="Controls|MetroToggleButton[IsPressed=true]">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
  </Style>

  <!--?-->
  <!--<Trigger Property="IsKeyboardFocusWithin" Value="True">
    <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush), Mode=OneWay}" />
  </Trigger>-->
</Styles>