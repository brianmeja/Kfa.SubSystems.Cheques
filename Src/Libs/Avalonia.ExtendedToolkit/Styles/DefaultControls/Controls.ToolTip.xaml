<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:Avalonia.ExtendedToolkit.Controls;assembly=Avalonia.ExtendedToolkit"
    xmlns:converters="clr-namespace:Avalonia.ExtendedToolkit.Converters;assembly=Avalonia.ExtendedToolkit"
    xmlns:System="clr-namespace:System;assembly=mscorlib">
  <Style Selector="ToolTip">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray7}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Sizes.Font.Tooltip}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="Padding" Value="6 3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border x:Name="Root"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Opacity="1"
                  >
            <!--<Border.Resources>
              <Storyboard x:Key="Visible State" />
              <Storyboard x:Key="Normal State" />
            </Border.Resources>-->
            <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                       Margin="{TemplateBinding Padding}"
                                       Content="{TemplateBinding Content}"
                                       ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Foreground="{TemplateBinding Foreground}"
                                       />
            <!--<VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="OpenStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.3"
                                    From="Open"
                                    To="Closed" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Closed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Open">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>-->
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--isopen/isclosed is missing-->
  <Style Selector="ToolTip:isopen /template/ Border#Root">
    <!--<Style.Animations>
      <Animation Duration="0:0:0.3" FillMode="Forward">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="1"/>
        </KeyFrame>
      </Animation>
    </Style.Animations>-->
  </Style>

  <Style Selector="ToolTip:isclosed /template/ Border#Root">
    <!--<Style.Animations>
      <Animation Duration="0:0:0.4">
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="0"/>
        </KeyFrame>
      </Animation>
    </Style.Animations>-->
  </Style>

</Styles>
