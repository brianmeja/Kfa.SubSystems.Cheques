<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:Avalonia.ExtendedToolkit.Controls;assembly=Avalonia.ExtendedToolkit"
    xmlns:Controlz="clr-namespace:Avalonia.Controlz.Controls;assembly=Avalonia.Controlz"
    xmlns:converters="clr-namespace:Avalonia.ExtendedToolkit.Converters;assembly=Avalonia.ExtendedToolkit"
    xmlns:tk="clr-namespace:Avalonia.ExtendedToolkit;assembly=Avalonia.ExtendedToolkit"
    xmlns:System="clr-namespace:System;assembly=mscorlib">

  <Style Selector="Controlz|GroupBox.MahApps">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Sizes.Font.Content}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="Padding" Value="4" />
  </Style>
  
  
  <Style Selector="Controls|MetroGroupBox">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ContentCharacterCasing" Value="Upper" />
    <Setter Property="HeaderFontSize" Value="{DynamicResource MahApps.Sizes.Font.Content}" />
    <Setter Property="HeaderForeground" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GroupBoxRoot">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border x:Name="HeaderSite"
                    Grid.Row="0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    UseLayoutRounding="True">
              <Controls:ContentControlEx x:Name="HeaderContent"
                                         Margin="{DynamicResource GroupBoxHeaderThemePadding}"
                                         Content="{TemplateBinding Header}"
                                         ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentCharacterCasing}"
                                         ContentTemplate="{TemplateBinding HeaderTemplate}"
                                         FontFamily="{TemplateBinding HeaderFontFamily}"
                                         FontSize="{TemplateBinding HeaderFontSize}"
                                         FontWeight="{TemplateBinding HeaderFontWeight}"
                                         UseLayoutRounding="False" >
                <TextBlock.Foreground>
                  <MultiBinding Converter="{x:Static converters:BackgroundToForegroundConverter.Instance}">
                    <Binding Mode="OneWay"
                             Path="Background"
                             RelativeSource="{RelativeSource TemplatedParent}" />
                    <Binding Mode="OneWay"
                             Path="HeaderForeground"
                             RelativeSource="{RelativeSource TemplatedParent}" />
                  </MultiBinding>
                </TextBlock.Foreground>
              </Controls:ContentControlEx>
            </Border>
            <Border Grid.Row="1"
                    Background="Transparent"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static tk:ThicknessSideType.Top}}"
                    UseLayoutRounding="True">
              <ContentPresenter Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Cursor="{TemplateBinding Cursor}"
                                UseLayoutRounding="False" />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

  </Style>

</Styles>
