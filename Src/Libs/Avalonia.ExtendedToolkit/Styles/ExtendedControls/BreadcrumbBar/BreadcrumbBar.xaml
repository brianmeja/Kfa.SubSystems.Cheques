<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="clr-namespace:Avalonia.ExtendedToolkit.Controls;assembly=Avalonia.ExtendedToolkit">

  <Styles.Resources>
    <Color x:Key="BreadcrumbBar_BackgroundColor">#FEFEFE</Color>
    <SolidColorBrush x:Key="BreadcrumbBar_BackgroundBrush" Color="{StaticResource BreadcrumbBar_BackgroundColor}"/>
  </Styles.Resources>

  <StyleInclude Source="avares://Avalonia.ExtendedToolkit/Styles/ExtendedControls/AeroChrome.xaml" />
  <StyleInclude Source="avares://Avalonia.ExtendedToolkit/Styles/ExtendedControls/BreadcrumbBar/BreadcrumbButton.xaml" />
  <StyleInclude Source="avares://Avalonia.ExtendedToolkit/Styles/ExtendedControls/BreadcrumbBar/BreadcrumbItem.xaml" />
  <StyleInclude Source="avares://Avalonia.ExtendedToolkit/Styles/ExtendedControls/BreadcrumbBar/ButtonTemplates.xaml" />

  <Style Selector="Controls|BreadcrumbBar">
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="BorderBrush" Value="Black"/>
    <Setter Property="Background" Value="{DynamicResource BreadcrumbBar_BackgroundBrush}"/>
    <Setter Property="MinHeight" Value="23" />
    <Setter Property="Background" Value="#A0FFFFFF" />
    <Setter Property="BorderBrush" Value="{DynamicResource  Odc.Brushes.Border}" />
    <Setter Property="Template" >
      <Setter.Value>
        <ControlTemplate>
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Focusable="False"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Styles>
              <Style Selector="Button.ButtonTemplate">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="{DynamicResource Odc.Brushes.Border}" />
                <!--<Setter Property="Focusable"
                        Value="{Binding Focusable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:BreadcrumbBar}}}"
                        />-->
              </Style>
              <!--Value="{Binding Focusable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:BreadcrumbBar}}}"-->


              <!--<Style Selector="Controls|BreadcrumbButton">
                <Setter Property="Focusable"
                        Value="{Binding Focusable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:BreadcrumbBar}}}"
                        />
              </Style>-->
              <!--Value="{Binding Focusable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:BreadcrumbBar}}}"-->
            </Border.Styles>

            <Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Focusable="False">
              <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ProgressBar x:Name="progress" Grid.Column="0" Grid.ColumnSpan="4"
                        Maximum="{Binding ProgressMaximum,RelativeSource={RelativeSource TemplatedParent}}"
                        Minimum="{Binding ProgressMinimum,RelativeSource={RelativeSource TemplatedParent}}"
                        Value="{Binding ProgressValue,RelativeSource={RelativeSource TemplatedParent}}"
                        Background="Transparent"
                        BorderThickness="0"
                        Classes="progressBarTemplate" />
                <Controls:BreadcrumbButton
                        Items="{TemplateBinding CollapsedTraces}"
                        Grid.Column="0"
                        x:Name="PART_Root"
                        MinWidth="0"
                        EnableVisualButtonStyle="False"
                        Mode="{TemplateBinding OverflowMode}"
                        SelectedItem="{Binding SelectedItem,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                        ItemTemplate="{TemplateBinding OverflowItemTemplate}"
                        IsImageVisible="True"
                        Image="{Binding SelectedBreadcrumb.Image, RelativeSource={RelativeSource TemplatedParent}}"
                        IsDropDownPressed="{Binding IsOverflowPressed,RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                  <!--ItemTemplateSelector="{TemplateBinding OverflowItemTemplateSelector}"-->
                </Controls:BreadcrumbButton>
                <ContentPresenter x:Name="container" Grid.Column="1"
                        Content="{Binding RootItem,RelativeSource={RelativeSource TemplatedParent}}" />
                <ToggleButton
                        x:Name="dropDown"
                        Grid.Column="2"
                        Focusable="False"
                        Width="16"
                        IsVisible="False"
                        Classes="DropDownButtonTemplate"
                        ClickMode="Press"
                        IsThreeState="False"
                        Margin="-1"
                        BorderThickness="1"
                        BorderBrush="{StaticResource borderBrush}"
                        IsChecked="{Binding IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                        />
                <!---->
                <ComboBox x:Name="PART_ComboBox"
                        IsVisible="False"
                        Margin="0"
                        Focusable="True"
                        ItemTemplate="{TemplateBinding DropDownItemTemplate}"
                        Items="{Binding DropDownItems,RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0"
                        Grid.Column="0"
                        SelectedIndex="{Binding SelectedDropDownIndex,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                        Grid.ColumnSpan="3" />
                <!--IsEditable="True"-->

                <ItemsControl
                        x:Name="buttons"
                        Grid.Column="3"
                        Margin="1,0,-1,0"
                        Items="{Binding Buttons,RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <!--IsItemsHost="True"-->
                      <StackPanel Orientation="Horizontal"  />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </Grid>
            </Border>
          </Border>
        </ControlTemplate>
      </Setter.Value>

    </Setter>
  </Style>

  <!--hide the breadcrumb container and root button  if the combobox is visible
  , otherwise a breadcrumb button could get the focus on mouseover:-->

  <Style Selector="Controls|BreadcrumbBar:comboBoxIsVisible /template/ ContentPresenter#container">
    <Setter Property="IsVisible" Value="false" />
  </Style>

  <Style Selector="Controls|BreadcrumbBar:comboBoxIsVisible /template/ Controls|BreadcrumbButton#PART_Root">
    <Setter Property="IsVisible" Value="false" />
  </Style>

  <Style Selector="Controls|BreadcrumbBar[IsRootSelected=true] /template/ Controls|BreadcrumbButton#PART_Root">
    <Setter Property="IsVisible" Value="False" />
  </Style>

  <Style Selector="Controls|BreadcrumbBar:pointerover">
    <Style.Animations>
      <Animation Duration="0:0:0.10" FillMode="Forward">
        <KeyFrame Cue="100%">
          <Setter Property="Background" Value="White"/>
        </KeyFrame>
      </Animation>
      <Animation Duration="0:0:0.20" FillMode="Backward">
        <KeyFrame Cue="0%">
          <Setter Property="Background" Value="White"/>
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|BreadcrumbBar[HasDropDownItems=True] /template/ ToggleButton#dropDown">
    <Setter Property="IsVisible" Value="True"/>
  </Style>




</Styles>